version: '3.7'

services:
  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    restart: unless-stopped
    env_file:
      - ./.env.prod
    networks:
      - backend

  broker:
    image: rabbitmq:3-management
    env_file: .env
    ports:
      - 5672:5672
      - 15672:15672
    restart: unless-stopped
    networks:
      - backend

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    restart: unless-stopped
    env_file:
      - ./.env.prod
    depends_on:
      - db
    networks:
      - frontend
      - backend

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 80:80
    restart: unless-stopped
    depends_on:
      - web
    networks:
      - frontend

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "celery -A core worker -l INFO"
    volumes:
      - media_volume:/home/app/web/mediafiles
    restart: always
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - broker
    networks:
      - backend

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "celery -A core beat -l INFO"
    restart: always
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - broker
    networks:
      - backend


networks:
  frontend:
  backend:

volumes:
  postgres_data:
  static_volume:
  media_volume:
